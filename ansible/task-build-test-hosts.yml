---
####################################################################################
# This Playbook will attempt to deploy EC2 instances, configured properly for testing
#    and operation 
#
####################################################################################


- hosts: 127.0.0.1
  connection: local
   
#  become: true
  vars:
     private_key: "/home/srmccul/.ssh/ansible"
     region: 'us-east-1'
  tasks:

 # - debug:
 #     var: result


  - debug:
      msg: "{{ groups['deployed'] }}"
#  - meta: end_play


#   Removing for now so can focus on configuring already created EC2 
#  - name: "Generate RSA keys at {{ private_key }}"
#    delegate_to: localhost
#    command : 'ssh-keygen -q -t rsa -f {{ private_key }} -C "" -N ""'
#    args:
#       creates:  "{{ private_key }}" 




# I can't seem to get a list of the not found systems


  - name: "Determine if EC2 instances are created"
    ec2_instance_facts:
        filters:
            "tag:unfetter-deploy": "{{ groups['deployed'] }}"
#            "instance-state-code": "!0"            

            "instance-state-name": 
                 - "starting"
                 - "running"
                 - "pending"
                 - "stopping"
                 - "stopped"
#            "instance-state-name": "pending"
#            "instance-state-name": "running"
#            "instance-state-name": "stopping"
#            "instance-state-name": "stopped"

    register: ec2_facts
  - name: "showing groups['deployed']"
    debug:
      msg: "{{ groups['deployed'] }}"

  - set_fact: 
     deployed_names: []
  - name: "building deployed_names"
    set_fact: 
      deployed_names: "{{ groups['deployed'] }}"
#      with_items: "{{ groups['deployed'] }}"
  - debug:
       msg: "{{ item }}"
    with_items: "{{ deployed_names }}"


  - set_fact:
      found_ec2: "{{ ec2_facts.instances|map(attribute='tags.unfetter-deploy')|list }}"
  - name: "Display found"
    debug:
      var: found_ec2


  - set_fact:
       no_ec2_list: []
  - set_fact: 
       no_ec2_list: "{{ no_ec2_list|default([]) | union([item]) }}"
    with_items: "{{ deployed_names }}"
    when: item not in found_ec2 

  - name: Failed if EC2's were not found
    fail:
       msg: "WARNING: The Following EC2 Instances have not been deployed: {{ no_ec2_list }}"
    when: no_ec2_list|length > 0 


  - name: "Start Stopped Instances"
    ec2:
       region: '{{ region }}'
       instance_tags:
          unfetter-deploy: "{{ item }}"
       state: running
    with_items: "{{ groups['deployed'] }}"

#      - "{{ ec2_facts.results[0].instances|select('state', 'equalto', 'running')|map(attribute='private_ip_address')|list }}"
         
# Get all the hosts that are created
# Output what we think the IP is, and the actual IP information highlighting differences
# Output any EC2 that have not been created
# Create them

# If no IP exists, then assign the IP based on what was found
# Um, build the host vars.yml if it doesn't exist?
#- name: begin configuration of hosts
- hosts: deployed
 


  tasks:
     - debug: msg="play_hosts={{ play_hosts }}"
  
   
 
